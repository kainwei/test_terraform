image:
  name: hashicorp/terraform:0.11.11
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
variables:
  DOCKER_HOST: tcp://127.0.0.1:2375/    
  TF_DIR: terraform
  PLAN: plan.tfplan
  S3_BUCKET: terraform-remote-state-defo

before_script:
  - rm -rf .terraform
  - terraform --version
  - pwd
  - sed -i '3s/123456/'$AWS_ACCESS_KEY'/' provider.tf
  - sed -i '4s/my-secret-key/'$AWS_SECRET_KEY'/' provider.tf
  - echo  $aws_pem |base64 -d >./minaterraform.pem
  - cat ./provider.tf
  - cd $TF_DIR && terraform init -input=false

stages:
  - validate
  - plan
  - apply
  - destroy

validate:
  stage: validate
  script:
    # - terraform validate
    -  cd ../$TF_DIR && terraform validate -var-file=aws-demo.tfvars

plan:
  stage: plan
  script:
    # - terraform plan -out "planfile"
    - cd ../$TF_DIR && terraform plan -var-file=aws-demo.tfvars -out=$PLAN
    - cd ../$TF_DIR && aws s3 cp $PLAN s3://$S3_BUCKET/$PLAN
  artifacts:
    name: plan
    paths:
      - $PLAN
apply:
  stage: apply
  script:
    - cd ../$TF_DIR && aws s3 cp s3://$S3_BUCKET/$PLAN $PLAN
    - cd ../$TF_DIR && terraform apply -input=false $PLAN
  dependencies:
    - plan
# apply:
#   stage: apply
#   script:
#     - terraform apply -input=false "planfile"
#   dependencies:
#     - plan
destroy:
  stage: destroy
  script:
    - terraform destroy -force
  when: manual    
  
